{"schemas":{"immunotherapy":{"updated":{"immunotherapy_type":{"meta":{"core":{"left":null,"right":true}}}},"created":{},"deleted":{}},"family_history":{"updated":{"relationship_type":{"restrictions":{"codeList":{"left":["Aunt","Brother","Cousin","Daughter","Father","Grandchild","Grandfather","Grandmother","Maternal Aunt","Maternal Cousin","Maternal Grandfather","Maternal Grandmother","Maternal Half-brother","Maternal Half-sister","Mother","Nephew","Niece","Other","Paternal Aunt","Paternal Cousin","Paternal Grandfather","Paternal Grandmother","Paternal Half-brother","Paternal Half-sister","Sister","Son","Unknown"],"right":["Aunt","Brother","Cousin","Daughter","Father","Grandchild","Grandfather","Grandmother","Maternal Aunt","Maternal Cousin","Maternal Grandfather","Maternal Grandmother","Maternal Half-brother","Maternal Half-sister","Maternal Uncle","Mother","Nephew","Niece","Other","Paternal Aunt","Paternal Cousin","Paternal Grandfather","Paternal Grandmother","Paternal Half-brother","Paternal Half-sister","Paternal Uncle","Sister","Son","Uncle","Unknown"],"data":{"added":["Maternal Uncle","Paternal Uncle","Uncle"],"deleted":[]}}}}},"created":{},"deleted":{}},"biomarker":{"updated":{},"created":{"program_id":{"changeType":"created","name":"program_id","valueType":"string","description":"Unique identifier of the ARGO program.","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.program_id","displayName":"Program ID"},"restrictions":{"required":true}},"submitter_donor_id":{"changeType":"created","description":"Unique identifier of the donor, assigned by the data provider.","name":"submitter_donor_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_donor_id","displayName":"Submitter Donor ID"},"restrictions":{"required":true,"regex":"^[A-Za-z0-9\\-\\._]{1,64}"}},"submitter_specimen_id":{"changeType":"created","name":"submitter_specimen_id","description":"Unique identifier of the specimen, assigned by the data provider.","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"foreignKey":"sample_registration.submitter_specimen_id","displayName":"Submitter Specimen ID"},"restrictions":{"regex":"^[A-Za-z0-9\\-\\._]{1,64}","script":["(function validate(inputs) {\r\n      const {$row, $name, $field} = inputs;\r\n      let result = {valid: true, message: \"Ok\"};\r\n      let missing = true;\r\n\r\n      // checks for a string just consisting of whitespace\r\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n      const identifierFields = ['submitter_specimen_id', 'submitter_treatment_id', 'submitter_primary_diagnosis_id', 'submitter_follow_up_id', 'test_interval'];\r\n     \r\n      if (!$field || checkforEmpty($field) || $field === null) { \r\n        for (let idField of identifierFields) {\r\n          if (!$row[idField] || checkforEmpty($row[idField]) || $row[idField] === null) {\r\n            continue;\r\n          }\r\n          else {\r\n            missing = false;\r\n          }\r\n        }\r\n        if (missing === true && (!$row.test_interval || checkforEmpty($row.test_interval) || $row.test_interval === null)) {\r\n          result = {\r\n            valid: false,\r\n            message: `The biomarker test must be associated with one clinical event or time interval. Please submit one of [submitter_specimen_id, submitter_primary_diagnosis_id, submitter_treatment_id, submitter_follow_up_id] OR the 'test_interval' field.`};\r\n        }\r\n      }\r\n      else if ($field && !(checkforEmpty($field)) && $field != null) {\r\n        for (let idField of identifierFields) {\r\n          if (($name != idField) && ($row[idField] && $row[idField] != null && !(checkforEmpty($row[idField])))) {\r\n            result = {\r\n              valid: false,\r\n              message: `Cannot submit both '${$name}' and '${idField}'. The biomarker test can only be associated with one event clinical identifier. If it is not associated with a clinical event, then the 'test_interval' field must be submitted. If the biomarker test was done during two clinical events, then submit biomarker test as new row in table.`};\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n  })"]}},"submitter_primary_diagnosis_id":{"changeType":"created","name":"submitter_primary_diagnosis_id","valueType":"string","description":"If the biomarker test was done at the time of primary diagnosis, then indicate the associated submitter_primary_diagnosis_id here.","meta":{"displayName":"Submitter Primary Diagnosis ID","primaryId":true},"restrictions":{"regex":"^[A-Za-z0-9\\-\\._]{1,64}","script":["(function validate(inputs) {\r\n      const {$row, $name, $field} = inputs;\r\n      let result = {valid: true, message: \"Ok\"};\r\n      let missing = true;\r\n\r\n      // checks for a string just consisting of whitespace\r\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n      const identifierFields = ['submitter_specimen_id', 'submitter_treatment_id', 'submitter_primary_diagnosis_id', 'submitter_follow_up_id', 'test_interval'];\r\n     \r\n      if (!$field || checkforEmpty($field) || $field === null) { \r\n        for (let idField of identifierFields) {\r\n          if (!$row[idField] || checkforEmpty($row[idField]) || $row[idField] === null) {\r\n            continue;\r\n          }\r\n          else {\r\n            missing = false;\r\n          }\r\n        }\r\n        if (missing === true && (!$row.test_interval || checkforEmpty($row.test_interval) || $row.test_interval === null)) {\r\n          result = {\r\n            valid: false,\r\n            message: `The biomarker test must be associated with one clinical event or time interval. Please submit one of [submitter_specimen_id, submitter_primary_diagnosis_id, submitter_treatment_id, submitter_follow_up_id] OR the 'test_interval' field.`};\r\n        }\r\n      }\r\n      else if ($field && !(checkforEmpty($field)) && $field != null) {\r\n        for (let idField of identifierFields) {\r\n          if (($name != idField) && ($row[idField] && $row[idField] != null && !(checkforEmpty($row[idField])))) {\r\n            result = {\r\n              valid: false,\r\n              message: `Cannot submit both '${$name}' and '${idField}'. The biomarker test can only be associated with one event clinical identifier. If it is not associated with a clinical event, then the 'test_interval' field must be submitted. If the biomarker test was done during two clinical events, then submit biomarker test as new row in table.`};\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n  })"]}},"submitter_treatment_id":{"changeType":"created","name":"submitter_treatment_id","valueType":"string","description":"If the biomarker test was done at the initiation of a specific treatment regimen, indicate the associated submitter_treatment_id here.","meta":{"primaryId":true,"displayName":"Submitter Treatment ID"},"restrictions":{"regex":"^[A-Za-z0-9\\-\\._]{1,64}","script":["(function validate(inputs) {\r\n      const {$row, $name, $field} = inputs;\r\n      let result = {valid: true, message: \"Ok\"};\r\n      let missing = true;\r\n\r\n      // checks for a string just consisting of whitespace\r\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n      const identifierFields = ['submitter_specimen_id', 'submitter_treatment_id', 'submitter_primary_diagnosis_id', 'submitter_follow_up_id', 'test_interval'];\r\n     \r\n      if (!$field || checkforEmpty($field) || $field === null) { \r\n        for (let idField of identifierFields) {\r\n          if (!$row[idField] || checkforEmpty($row[idField]) || $row[idField] === null) {\r\n            continue;\r\n          }\r\n          else {\r\n            missing = false;\r\n          }\r\n        }\r\n        if (missing === true && (!$row.test_interval || checkforEmpty($row.test_interval) || $row.test_interval === null)) {\r\n          result = {\r\n            valid: false,\r\n            message: `The biomarker test must be associated with one clinical event or time interval. Please submit one of [submitter_specimen_id, submitter_primary_diagnosis_id, submitter_treatment_id, submitter_follow_up_id] OR the 'test_interval' field.`};\r\n        }\r\n      }\r\n      else if ($field && !(checkforEmpty($field)) && $field != null) {\r\n        for (let idField of identifierFields) {\r\n          if (($name != idField) && ($row[idField] && $row[idField] != null && !(checkforEmpty($row[idField])))) {\r\n            result = {\r\n              valid: false,\r\n              message: `Cannot submit both '${$name}' and '${idField}'. The biomarker test can only be associated with one event clinical identifier. If it is not associated with a clinical event, then the 'test_interval' field must be submitted. If the biomarker test was done during two clinical events, then submit biomarker test as new row in table.`};\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n  })"]}},"submitter_follow_up_id":{"changeType":"created","description":"If the biomarker test was done during a follow-up event, then indicate the associated submitter_follow_up_id here.","name":"submitter_follow_up_id","valueType":"string","meta":{"validationDependency":true,"primaryId":true,"displayName":"Submitter Follow-Up ID"},"restrictions":{"regex":"^[A-Za-z0-9\\-\\._]{1,64}","script":["(function validate(inputs) {\r\n      const {$row, $name, $field} = inputs;\r\n      let result = {valid: true, message: \"Ok\"};\r\n      let missing = true;\r\n\r\n      // checks for a string just consisting of whitespace\r\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n      const identifierFields = ['submitter_specimen_id', 'submitter_treatment_id', 'submitter_primary_diagnosis_id', 'submitter_follow_up_id', 'test_interval'];\r\n     \r\n      if (!$field || checkforEmpty($field) || $field === null) { \r\n        for (let idField of identifierFields) {\r\n          if (!$row[idField] || checkforEmpty($row[idField]) || $row[idField] === null) {\r\n            continue;\r\n          }\r\n          else {\r\n            missing = false;\r\n          }\r\n        }\r\n        if (missing === true && (!$row.test_interval || checkforEmpty($row.test_interval) || $row.test_interval === null)) {\r\n          result = {\r\n            valid: false,\r\n            message: `The biomarker test must be associated with one clinical event or time interval. Please submit one of [submitter_specimen_id, submitter_primary_diagnosis_id, submitter_treatment_id, submitter_follow_up_id] OR the 'test_interval' field.`};\r\n        }\r\n      }\r\n      else if ($field && !(checkforEmpty($field)) && $field != null) {\r\n        for (let idField of identifierFields) {\r\n          if (($name != idField) && ($row[idField] && $row[idField] != null && !(checkforEmpty($row[idField])))) {\r\n            result = {\r\n              valid: false,\r\n              message: `Cannot submit both '${$name}' and '${idField}'. The biomarker test can only be associated with one event clinical identifier. If it is not associated with a clinical event, then the 'test_interval' field must be submitted. If the biomarker test was done during two clinical events, then submit biomarker test as new row in table.`};\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n  })"]}},"test_interval":{"changeType":"created","description":"If the biomarker test was not associated with a specific specimen or follow-up, primary diagnosis or treatment event, then indicate the interval of time since primary diagnosis that the biomarker test was performed at, in days.","name":"test_interval","valueType":"integer","restrictions":{"range":{"exclusiveMin":0},"script":["(function validate(inputs) {\r\n      const {$row, $name, $field} = inputs;\r\n      let result = {valid: true, message: \"Ok\"};\r\n      let missing = true;\r\n\r\n      // checks for a string just consisting of whitespace\r\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\r\n\r\n      const identifierFields = ['submitter_specimen_id', 'submitter_treatment_id', 'submitter_primary_diagnosis_id', 'submitter_follow_up_id', 'test_interval'];\r\n     \r\n      if (!$field || checkforEmpty($field) || $field === null) { \r\n        for (let idField of identifierFields) {\r\n          if (!$row[idField] || checkforEmpty($row[idField]) || $row[idField] === null) {\r\n            continue;\r\n          }\r\n          else {\r\n            missing = false;\r\n          }\r\n        }\r\n        if (missing === true && (!$row.test_interval || checkforEmpty($row.test_interval) || $row.test_interval === null)) {\r\n          result = {\r\n            valid: false,\r\n            message: `The biomarker test must be associated with one clinical event or time interval. Please submit one of [submitter_specimen_id, submitter_primary_diagnosis_id, submitter_treatment_id, submitter_follow_up_id] OR the 'test_interval' field.`};\r\n        }\r\n      }\r\n      else if ($field && !(checkforEmpty($field)) && $field != null) {\r\n        for (let idField of identifierFields) {\r\n          if (($name != idField) && ($row[idField] && $row[idField] != null && !(checkforEmpty($row[idField])))) {\r\n            result = {\r\n              valid: false,\r\n              message: `Cannot submit both '${$name}' and '${idField}'. The biomarker test can only be associated with one event clinical identifier. If it is not associated with a clinical event, then the 'test_interval' field must be submitted. If the biomarker test was done during two clinical events, then submit biomarker test as new row in table.`};\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n  })"]},"meta":{"validationDependency":true,"primaryId":true,"units":"days","displayName":"Interval Of Test","notes":"This field is required if the biomarker test is not associated with a specimen or primary diagnosis, treatment or follow-up event. The associated primary diagnosis is used as the reference point for this interval. To calculate this, find the number of days since the date of primary diagnosis."}},"ca19-9_level":{"changeType":"created","description":"Indicate the level of carbohydrate antigen 19-9 (CA19-9). Carbohydrate antigen 19-9 testing is useful to monitor the response to treatment in pancreatic cancer patients. (Reference: LOINC: 24108-3)","name":"ca19-9_level","valueType":"integer","restrictions":{"range":{"exclusiveMin":0}},"meta":{"displayName":"CA19-9 Level"}},"crp_levels":{"changeType":"created","description":"Indicate the quantitative measurement of the amount of CRP, an inflammatory marker, in the blood in mg/L. Used for screening and monitoring for inflammatory disease, infections, and for cardiovascular disease risk assessment. (Reference: NCIt C64548, LOINC 30522-7)","name":"crp_levels","valueType":"integer","restrictions":{"range":{"exclusiveMin":0}},"meta":{"displayName":"C-reactive protein (CRP) Level"}},"ldl_level":{"changeType":"created","description":"Indicate the level of lactate dehydrogenase (LDH), in IU/L. An increased amount of LDH in the blood may be a sign of tissue damage and some types of cancer. (Reference: NCI)","name":"ldl_level","valueType":"integer","restrictions":{"range":{"exclusiveMin":0}},"meta":{"displayName":"Lactate Dehydrogenase (LDH) Level"}},"anc":{"changeType":"created","description":"Indicate the value for a hematology laboratory test for the absolute number of neutrophil cells present in a sample of peripheral blood from a donor, in cells/uL. The ANC may be used to check for infection, inflammation, leukemia and other conditions. Cancer treatment such as chemotherapy may reduce the ANC. (Reference: caDSR CDE ID: 2180198)","name":"anc","valueType":"integer","restrictions":{"range":{"exclusiveMin":0}},"meta":{"displayName":"Absolute Neutrophil Count (ANC)"}},"alc":{"changeType":"created","description":"Indicate the absolute number of lymphocytes (ALC) found in a given volume of blood, as cells/uL. Lymphocytes help fight off infections and an altered cellular immune function has been demonstrated in patients with cancer. (Reference: NCIt: C113237)","name":"alc","valueType":"integer","restrictions":{"range":{"exclusiveMin":0}},"meta":{"displayName":"Absolute Lymphocyte Count (ALC)"}},"brca_carrier":{"changeType":"created","description":"Indicate whether donor is a carrier of a mutation in a BRCA gene. A mutation in this gene is associated with an increased risk of familial breast and ovarian cancer.","name":"brca_carrier","valueType":"string","restrictions":{"codeList":["BRCA1","BRCA2","Both BRCA1 and BRCA2","No","Not applicable","Unknown"]},"meta":{"displayName":"BRCA Carrier"}},"er_status":{"changeType":"created","description":"Indicate the expression of estrogen receptor (ER). (Reference: NAACCR 3827)","name":"er_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"Estrogen Receptor Status"}},"er_allred_score":{"changeType":"created","description":"Indicate the Allred score for estrogen receptor. The Allred score is based on the percentage of cells that stain positive by immunohistochemistry (IHC) for estrogen receptor (ER) and the intensity of that staining. (Reference: NAACCR: 3828, caDSR CDE ID 2725288)","name":"er_allred_score","valueType":"string","restrictions":{"codeList":["Total ER Allred score of 1","Total ER Allred score of 2","Total ER Allred score of 3","Total ER Allred score of 4","Total ER Allred score of 5","Total ER Allred score of 6","Total ER Allred score of 7","Total ER Allred score of 8","Not applicable","Unknown"]},"meta":{"displayName":"Estrogen Receptor Allred Score"}},"er_percent_positive":{"changeType":"created","name":"er_percent_positive","description":"Indicate a value, in decimals, that represents the percent of cells staining estrogen receptor positive by immunohistochemistry (IHC).","valueType":"number","meta":{"displayName":"Estrogen Receptor Percent Positive"},"restrictions":{"range":{"min":0,"max":1}}},"her2_ihc_status":{"changeType":"created","description":"Indicate the expression of human epidermal growth factor receptor-2 (HER2) assessed by immunohistochemistry (IHC). (Reference: AJCC 8th Edition, Chapter 48)","name":"her2_ihc_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Equivocal","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"HER2 IHC Status","notes":"Negative: 0 or 1+ staining, Equivocal: 2+ staining, Positive: 3+ staining"}},"her2_ish_status":{"changeType":"created","description":"Indicate the expression of human epidermal growth factor receptor-2 (HER2) assessed by in situ hybridization (ISH). (Reference: NAACCR: 3854)","name":"her2_ish_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Equivocal","Positive","Negative","Not applicable","Unknown"]},"meta":{"displayName":"HER2 ISH Status"}},"pr_status":{"changeType":"created","description":"Indicate the expression of progesterone receptor (PR). (Reference: NAACCR 3915)","name":"pr_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"Progesterone Receptor Status"}},"pr_allred_score":{"changeType":"created","description":"Indicate the Allred score for progesterone receptor. The Allred score is based on the percentage of cells that stain positive by IHC for the progesterone receptor (PR) and the intensity of that staining. (Reference: NAACCR 3916)","name":"pr_allred_score","valueType":"string","restrictions":{"codeList":["Total PR Allred score of 1","Total PR Allred score of 2","Total PR Allred score of 3","Total PR Allred score of 4","Total PR Allred score of 5","Total PR Allred score of 6","Total PR Allred score of 7","Total PR Allred score of 8","Not applicable","Unknown"]},"meta":{"displayName":"Progesterone Receptor Allred Score"}},"pr_percent_positive":{"changeType":"created","name":"pr_percent_positive","description":"Indicate a value, in decimals, that represents the percent of cells staining progesterone receptor positive by immunohistochemistry (IHC).","valueType":"number","meta":{"displayName":"Progesterone Receptor Percent Positive"},"restrictions":{"range":{"min":0,"max":1}}},"pd-l1_status":{"changeType":"created","description":"Indicate the immunohistochemical test result that refers to the over-expression or lack of expression of programmed death ligand 1 (PD-L1) in a tissue sample of a primary or metastatic malignant neoplasm. (Reference NCIt: C122807)","name":"pd-l1_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"PD-L1 Status"}},"alk_ihc_status":{"changeType":"created","description":"Indicate the expression of anaplastic lymphoma receptor tyrosine kinase (ALK) as assessed by immunohistochemistry (IHC). Abnormalities of ALK can be present in lung cancers.","name":"alk_ihc_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"ALK IHC Status"}},"alk_ihc_intensity":{"changeType":"created","description":"Indicate the intensity of anaplastic lymphoma receptor tyrosine kinase (ALK) as assessed by immunohistochemistry (IHC). Abnormalities of ALK can be present in lung cancers.","name":"alk_ihc_intensity","valueType":"string","restrictions":{"codeList":["0 (No stain)","+1","+2","+3"]},"meta":{"displayName":"ALK IHC Intensity"}},"alk_fish_status":{"changeType":"created","description":"Indicate the expression of anaplastic lymphoma receptor tyrosine kinase (ALK) as assessed by fluorescence in situ hybridization (FISH). Abnormalities of ALK can be present in lung cancers.","name":"alk_fish_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"ALK FISH Status"}},"ros1_ihc_status":{"changeType":"created","description":"Indicate the expression of receptor lymphoma kinase (ROS1) as assessed by immunohistochemistry (IHC). Gene fusions involving ROS1 can be present in lung cancers.","name":"ros1_ihc_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"ROS1 IHC Status"}},"pan-trk_ihc_status":{"changeType":"created","description":"Indicate the expression of Pan-TRK as assessed by immunohistochemistry (IHC). Pan-TRK IHC screens for neurotrophic tyrosine kinase receptor (NTRK) fusions which have been described in many cancers including lung, thyroid and colorectal cancers.","name":"pan-trk_ihc_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"Pan-TRK IHC Status"}},"ret_fish_status":{"changeType":"created","description":"Indicate the expression of gene arrangement involving the RET proto-oncogene (RET1) as assessed by fluorescence in situ hybridization (FISH). RET gene rearrangements are associated with several different neoplastic conditions. (Reference: NCIt C46005)","name":"ret_fish_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"RET1 FISH Status"}},"hpv_ihc_status":{"changeType":"created","description":"Indicate the expression of Human papillomavirus (HPV) p16 as assessed by immunohistochemistry (IHC).","name":"hpv_ihc_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"HPV IHC Status"}},"hpv_dna_status":{"changeType":"created","description":"Indicate the expression of Human papillomavirus (HPV) as assessed using a laboratory test in which cells are scraped from the cervix to look for DNA of HPV. (Reference: NCIt C93141)","name":"hpv_dna_status","valueType":"string","restrictions":{"codeList":["Cannot be determined","Negative","Not applicable","Positive","Unknown"]},"meta":{"displayName":"HPV DNA Status"}}},"deleted":{}}}}
