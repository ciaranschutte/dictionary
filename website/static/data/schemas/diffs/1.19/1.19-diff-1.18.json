{
  "schemas": {
    "sample_registration": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_specimen_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "specimen_type": {
          "restrictions": {
            "codeList": {
              "left": [
                "Cell line - derived from metastatic tumour",
                "Cell line - derived from normal",
                "Cell line - derived from tumour",
                "Cell line - derived from xenograft tumour",
                "Metastatic tumour - additional metastatic",
                "Metastatic tumour - metastasis local to lymph node",
                "Metastatic tumour - metastasis to distant location",
                "Metastatic tumour",
                "Normal - tissue adjacent to primary tumour",
                "Normal",
                "Primary tumour - additional new primary",
                "Primary tumour - adjacent to normal",
                "Primary tumour",
                "Recurrent tumour",
                "Tumour - unknown if derived from primary or metastatic",
                "Xenograft - derived from metastatic tumour",
                "Xenograft - derived from primary tumour",
                "Xenograft - derived from tumour cell line"
              ],
              "right": [
                "Cell line - derived from normal",
                "Cell line - derived from tumour",
                "Cell line - derived from xenograft tumour",
                "Metastatic tumour - additional metastatic",
                "Metastatic tumour - metastasis local to lymph node",
                "Metastatic tumour - metastasis to distant location",
                "Metastatic tumour",
                "Normal - tissue adjacent to primary tumour",
                "Normal",
                "Primary tumour - additional new primary",
                "Primary tumour - adjacent to normal",
                "Primary tumour",
                "Recurrent tumour",
                "Tumour - unknown if derived from primary or metastatic",
                "Xenograft - derived from primary tumour",
                "Xenograft - derived from tumour cell line"
              ],
              "data": {
                "added": [],
                "deleted": [
                  "Cell line - derived from metastatic tumour",
                  "Xenograft - derived from metastatic tumour"
                ]
              }
            }
          }
        },
        "submitter_sample_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "donor": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {
        "lost_to_followup_after_clinical_event_id": {
          "changeType": "deleted",
          "description": "If the donor became lost to follow up, indicate the identifier of the clinical event (eg. submitter_primary_diagnosis_id, submitter_treatment_id or submitter_follow_up_id) after which the donor became lost to follow up.",
          "name": "lost_to_followup_after_clinical_event_id",
          "valueType": "string",
          "restrictions": {
            "script": [
              "(function validate(inputs) {\n        const {$row, $name, $field} = inputs;\n        let result = {valid: true, message: \"Ok\"};\n        const currField = typeof($field) === 'string' ? $field.trim().toLowerCase() : $field;\n      \n        /* checks for a string just consisting of whitespace */\n        const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n        \n        if (currField != null && !(checkforEmpty(currField))) {\n           const vitalStatus = $row.vital_status.trim().toLowerCase();\n\n           if (vitalStatus === \"deceased\") {\n              result = {valid: false, message: `${$name} cannot be submitted if the donor's vital_status is deceased.`}\n           }\n        }\n        return result;\n    })"
            ]
          },
          "meta": {
            "displayName": "Lost To Follow Up After Clinical Event",
            "foreignKey": "primary_diagnosis.submitter_primary_diagnosis_id",
            "validationDependency": true
          }
        }
      }
    },
    "specimen": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_specimen_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_primary_diagnosis_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "primary_diagnosis": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_primary_diagnosis_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "treatment": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_primary_diagnosis_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "response_to_treatment": {
          "restrictions": {
            "script": {
              "left": [
                "(function validate(inputs) {\n      const {$row, $name, $field} = inputs;\n      let result = {valid: true, message: \"Ok\"};\n      const coreFields = ['treatment_start_interval', 'treatment_duration', 'is_primary_treatment', 'treatment_intent', 'treatment_setting', 'response_to_treatment_criteria_method', 'response_to_treatment'];\n \n      // checks for a string just consisting of whitespace\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n      const treatmentType = ($row.treatment_type).map(value => value.toLowerCase());\n       \n      if (!treatmentType.includes(\"no treatment\") && coreFields.includes($name) && (!$field || $field === null || checkforEmpty($field))) {\n          result = { valid: false, message: `The '${$name}' field must be submitted when the 'treatment_type' field is '${treatmentType}'`};\n      }\n      else if (treatmentType.includes(\"no treatment\") && ($field && $field != null && !(checkforEmpty($field)))) {\n        if (coreFields.includes($name) || (typeof($field) === 'string' && $field.trim().toLowerCase() != 'not applicable') || typeof($field) === 'number') {\n          result = { valid: false, message: `The '${$name}' field cannot be submitted if the 'treatment_type' field is '${treatmentType}'`};\n        }\n      }\n      return result;\n  })",
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n\n    /* checks for a string just consisting of whitespace */\n    const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n    let codeList = [];\n    \n      switch ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method.trim().toLowerCase()) {\n        case 'eln dohner aml 2017 oncology response criteria':\n          codeList = [\n            'complete remission',\n            'complete remission with incomplete hematologic recovery (cri)',\n            'complete remission without minimal residual disease (crmrd-)',\n            'hematologic relapse (after crmrd-, cr, cri)',\n            'molecular relapse (after crmrd-)',\n            'partial remission',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'iwg cheson aml 2003 oncology response criteria':\n          codeList = [\n            'cytogenetic complete remission (crc)',\n            'molecular complete remission (crm)',\n            'morphologic complete remission',\n            'morphologic complete remission with incomplete blood count recovery (cri)',\n            'morphologic leukemia-free state',\n            'partial remission'\n          ];\n          break;\n        case 'irecist':\n          codeList = [\n            'immune complete response (icr)',\n            'immune confirmed progressive disease (icpd)',\n            'immune partial response (ipr)',\n            'immune stable disease (isd)',\n            'immune unconfirmed progressive disease (iupd)'\n          ];\n          break;\n        case 'recist':\n          codeList = [\n            'complete response',\n            'no evidence of disease (ned)',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'response assessment in neuro-oncology (rano)':\n          codeList = [\n            'complete response',\n            'minor response',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'physician assessed response criteria':\n          codeList = [\n            'physician assessed complete response',\n            'physician assessed partial response',\n            'physician assessed progressive disease',\n            'physician assessed stable disease'\n          ];\n          break;\n        default:\n          codelist = [];\n      }\n\n    if ($field && $field != null && !(checkforEmpty($field))) {\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'response_to_treatment_criteria_method' is set to '${\n          $row.response_to_treatment_criteria_method}', the '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    else {\n       if ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method != null && !(checkforEmpty($row.response_to_treatment_criteria_method))) {\n         result = { valid: false, message: `The '${$name}' field must be submitted when 'response_to_treatment_criteria_method' is set to '${$row.response_to_treatment_criteria_method}'. The '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`};\n       }\n    }\n    return result;\n  })"
              ],
              "right": [
                "(function validate(inputs) {\n      const {$row, $name, $field} = inputs;\n      let result = {valid: true, message: \"Ok\"};\n      const coreFields = ['treatment_start_interval', 'treatment_duration', 'is_primary_treatment', 'treatment_intent', 'treatment_setting', 'response_to_treatment_criteria_method', 'response_to_treatment'];\n \n      // checks for a string just consisting of whitespace\n      const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n      const treatmentType = ($row.treatment_type).map(value => value.toLowerCase());\n       \n      if (!treatmentType.includes(\"no treatment\") && coreFields.includes($name) && (!$field || $field === null || checkforEmpty($field))) {\n          result = { valid: false, message: `The '${$name}' field must be submitted when the 'treatment_type' field is '${treatmentType}'`};\n      }\n      else if (treatmentType.includes(\"no treatment\") && ($field && $field != null && !(checkforEmpty($field)))) {\n        if (coreFields.includes($name) || (typeof($field) === 'string' && $field.trim().toLowerCase() != 'not applicable') || typeof($field) === 'number') {\n          result = { valid: false, message: `The '${$name}' field cannot be submitted if the 'treatment_type' field is '${treatmentType}'`};\n        }\n      }\n      return result;\n  })",
                "(function validate(inputs) {\n    const {$row, $name, $field} = inputs;\n    let result = { valid: true, message: 'Ok' };\n\n    /* checks for a string just consisting of whitespace */\n    const checkforEmpty = (entry) => {return /^\\s+$/g.test(decodeURI(entry).replace(/^\"(.*)\"$/, '$1'))};\n    let codeList = [];\n    \n      switch ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method.trim().toLowerCase()) {\n        case 'eln dohner aml 2017 oncology response criteria':\n          codeList = [\n            'complete remission',\n            'complete remission with incomplete hematologic recovery (cri)',\n            'complete remission without minimal residual disease (crmrd-)',\n            'hematologic relapse (after crmrd-, cr, cri)',\n            'molecular relapse (after crmrd-)',\n            'partial remission',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'iwg cheson aml 2003 oncology response criteria':\n          codeList = [\n            'cytogenetic complete remission (crc)',\n            'molecular complete remission (crm)',\n            'morphologic complete remission',\n            'morphologic complete remission with incomplete blood count recovery (cri)',\n            'morphologic leukemia-free state',\n            'partial remission'\n          ];\n          break;\n        case 'irecist':\n          codeList = [\n            'immune complete response (icr)',\n            'immune confirmed progressive disease (icpd)',\n            'immune partial response (ipr)',\n            'immune stable disease (isd)',\n            'immune unconfirmed progressive disease (iupd)'\n          ];\n          break;\n        case 'recist':\n          codeList = [\n            'complete response',\n            'no evidence of disease (ned)',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'response assessment in neuro-oncology (rano)':\n          codeList = [\n            'complete response',\n            'minor response',\n            'partial response',\n            'progressive disease',\n            'stable disease'\n          ];\n          break;\n        case 'physician assessed response criteria':\n          codeList = [\n            'physician assessed complete response',\n            'physician assessed partial response',\n            'physician assessed stable disease'\n          ];\n          break;\n        default:\n          codelist = [];\n      }\n\n    if ($field && $field != null && !(checkforEmpty($field))) {\n      if (!codeList.includes($field.trim().toLowerCase()) && codeList.length) {\n        const msg = `'${$field}' is not a permissible value. When 'response_to_treatment_criteria_method' is set to '${\n          $row.response_to_treatment_criteria_method}', the '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`;\n\n        result.valid = false;\n        result.message = msg;\n      }\n    }\n    else {\n       if ($row.response_to_treatment_criteria_method && $row.response_to_treatment_criteria_method != null && !(checkforEmpty($row.response_to_treatment_criteria_method))) {\n         result = { valid: false, message: `The '${$name}' field must be submitted when 'response_to_treatment_criteria_method' is set to '${$row.response_to_treatment_criteria_method}'. The '${$name}' field must be one of the following: \\n${codeList\n          .map(code => `- \"${code}\"`)\n          .join('\\n')}`};\n       }\n    }\n    return result;\n  })"
              ]
            },
            "codeList": {
              "left": [
                "Complete remission",
                "Complete remission with incomplete hematologic recovery (CRi)",
                "Complete remission without minimal residual disease (CRMRD-)",
                "Complete response",
                "Cytogenetic complete remission (CRc)",
                "Hematologic relapse (after CRMRD-, CR, CRi)",
                "Immune complete response (iCR)",
                "Immune confirmed progressive disease (iCPD)",
                "Immune partial response (iPR)",
                "Immune stable disease (iSD)",
                "Immune unconfirmed progressive disease (iUPD)",
                "Minor response",
                "Molecular complete remission (CRm)",
                "Molecular relapse (after CRMRD-)",
                "Morphologic complete remission",
                "Morphologic complete remission with incomplete blood count recovery (CRi)",
                "Morphologic leukemia-free state",
                "No evidence of disease (NED)",
                "Partial remission",
                "Partial response",
                "Physician assessed complete response",
                "Physician assessed partial response",
                "Physician assessed progressive disease",
                "Physician assessed stable disease",
                "Progressive disease",
                "Stable disease"
              ],
              "right": [
                "Complete remission",
                "Complete remission with incomplete hematologic recovery (CRi)",
                "Complete remission without minimal residual disease (CRMRD-)",
                "Complete response",
                "Cytogenetic complete remission (CRc)",
                "Hematologic relapse (after CRMRD-, CR, CRi)",
                "Immune complete response (iCR)",
                "Immune confirmed progressive disease (iCPD)",
                "Immune partial response (iPR)",
                "Immune stable disease (iSD)",
                "Immune unconfirmed progressive disease (iUPD)",
                "Minor response",
                "Molecular complete remission (CRm)",
                "Molecular relapse (after CRMRD-)",
                "Morphologic complete remission",
                "Morphologic complete remission with incomplete blood count recovery (CRi)",
                "Morphologic leukemia-free state",
                "No evidence of disease (NED)",
                "Partial remission",
                "Partial response",
                "Physician assessed complete response",
                "Physician assessed partial response",
                "Physician assessed stable disease",
                "Progressive disease",
                "Stable disease"
              ],
              "data": { "added": [], "deleted": ["Physician assessed progressive disease"] }
            }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "chemotherapy": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "hormone_therapy": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "radiation": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "immunotherapy": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "surgery": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_specimen_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "follow_up": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_follow_up_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_primary_diagnosis_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "exposure": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "family_history": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "family_relative_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "biomarker": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_specimen_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_primary_diagnosis_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_treatment_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        },
        "submitter_follow_up_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    },
    "comorbidity": {
      "updated": {
        "submitter_donor_id": {
          "restrictions": {
            "regex": { "left": "^[A-Za-z0-9\\-\\._]{1,64}$", "right": "^[A-Za-z0-9\\-\\._]{1,64}" }
          }
        }
      },
      "created": {},
      "deleted": {}
    }
  }
}
